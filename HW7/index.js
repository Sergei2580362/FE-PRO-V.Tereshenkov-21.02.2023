// Arrays
// 1. Дан случайный массив чисел (создайте самостоятельно). С помощью метода .filter() отфильтруйте массив так, чтобы в новый массив вошли только четные двухзначные числа из исходного.

// Решение

// Допустим, у нас есть массив чисел arr:

const arr = [23, 45, 76, 101, 18, 64, 99, 88, 42, 57];
// Чтобы отфильтровать из него только четные двузначные числа, мы можем использовать метод .filter() следующим образом:

const filteredArr = arr.filter(
  (num) => num >= 10 && num <= 99 && num % 2 === 0
);
// В этом примере мы передаем функцию обратного вызова num => num >= 10 && num <= 99 && num % 2 === 0 в метод .filter(). Эта функция проверяет, является ли число num двузначным и четным. Если проверка проходит успешно, то число остается в отфильтрованном массиве filteredArr.

// В результате выполнения этого кода, в переменной filteredArr будет находиться новый массив, содержащий только четные двузначные числа:

console.log(filteredArr); // [76, 18, 64, 88, 42]

// 2. Пользователь вводит 10 случайных значений. Каждое значение необходимо записать в массив. С помощью метода .every() проверить были ли все введенные пользователем данные – числами.

// Решение

// Вот пример решения данной задачи на JavaScript:

const userInput = []; // создаем пустой массив для ввода данных
for (let i = 0; i < 10; i++) {
  // заполняем массив данными
  const value = prompt(`Введите значение ${i + 1}:`);
  userInput.push(value);
}

const allNumbers = userInput.every((value) => !isNaN(Number(value))); // проверяем, все ли элементы массива - числа

if (allNumbers) {
  console.log("Все значения - числа");
} else {
  console.log("Есть значения, которые не являются числами");
}
// В данном примере создается пустой массив userInput, который заполняется 10 значениями, введенными пользователем с помощью функции prompt(). Затем с помощью метода every() проверяется, являются ли все значения введенные пользователем числами. Если все значения числовые, выводится сообщение "Все значения - числа", в противном случае выводится сообщение "Есть значения, которые не являются числами".

// Дан массив объектов

// const arr = [
//   {a: 2, b: 1},
//   {a: 5, b: 12},
//   {a: 95, b: 7}
// ]
// Используя ТОЛЬКО методы массивов (циклы запрещены):

// Вывести в консоль 'its valid', если во всех объектах поле a > b, вывести 'its invalid' если хотя бы в одном объекте a<=b
// На основе массива arr, создать массив объектов у которых поле b возведено в квадрат пример:
// const arr2 = [
//   {a: 2, b: 1},
//   {a: 5, b: 144},
//   {a: 95, b: 49}
// ];

// Решение

// Для решения первой задачи можно использовать метод массивов every() для проверки условия в каждом объекте массива. Если все объекты удовлетворяют условию, то вернется true, иначе false.

const isValid = arr.every((obj) => obj.a > obj.b);
console.log(isValid ? "its valid" : "its invalid");

// Для решения второй задачи можно использовать метод массивов map() для создания нового массива с измененными объектами. В функции-колбэке метода map() можно использовать оператор spread для копирования всех полей объекта, а затем изменять поле b с помощью оператора возведения в квадрат.

const arr2 = arr.map((obj) => ({ ...obj, b: obj.b ** 2 }));
console.log(arr2);
